@{
    Layout = "~/Views/Shared/AdminUtility.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Loan Products</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="/static/css/adminNav.css">
    <style>
        .loan-products-container {
            padding: 20px;
        }

        .loan-products-table {
            width: 100%;
        }

            .loan-products-table th,
            .loan-products-table td {
                padding: 10px;
                border: 1px solid #ddd;
                text-align: left;
            }

            .loan-products-table th {
                background-color: #f8f9fa;
            }

        .edit-button {
            margin-right: 5px;
        }

        body {
            background-color: #f4ece4;
        }
    </style>
</head>
<body>
    <div class="loan-products-container">
        <h3>Loan Products</h3>
        <table class="table table-bordered loan-products-table" id="loanProductsTable">
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Interest Rate</th>
                    <th>Minimum Amount</th>
                    <th>Maximum Amount</th>
                    <th>Tenure</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>

    <div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProductModalLabel">Edit Loan Product</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editProductForm">
                        <div class="form-group">
                            <label for="editProductName">Product Name</label>
                            <input type="text" class="form-control" id="editProductName" name="editProductName" required readonly>
                        </div>
                        <div class="form-group">
                            <label for="editInterestRate">Interest Rate (%)</label>
                            <input type="number" class="form-control" id="editInterestRate" name="editInterestRate" required>
                        </div>
                        <div class="form-group">
                            <label for="editMinAmount">Minimum Amount</label>
                            <input type="number" class="form-control" id="editMinAmount" name="editMinAmount" required>
                        </div>
                        <div class="form-group">
                            <label for="editMaxAmount">Maximum Amount</label>
                            <input type="number" class="form-control" id="editMaxAmount" name="editMaxAmount" required>
                        </div>
                        <div class="form-group">
                            <label for="editTenure">Tenure (months)</label>
                            <input type="number" class="form-control" id="editTenure" name="editTenure" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="saveEditButton">Save</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><span id="deleteProductName"></span> will be permanently deleted. Are you sure?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            // Highlight the current page in the sidebar
            $('#sidebar a[href="@Url.Action("LoanProducts", "Admin")]"').addClass('active');

            // Sample loan product data
            const loanProductsData = [
                { name: 'Home Loan', interestRate: 6.5, minAmount: 50000, maxAmount: 5000000, tenure: 240 },
                { name: 'Car Loan', interestRate: 7.2, minAmount: 100000, maxAmount: 2000000, tenure: 60 },
                { name: 'Personal Loan', interestRate: 10.5, minAmount: 5000, maxAmount: 500000, tenure: 36 },
                { name: 'Education Loan', interestRate: 8.0, minAmount: 20000, maxAmount: 1000000, tenure: 120 }
            ];

            let currentlyEditingProduct = null;
            let productToDelete = null; // To store the product to be deleted

            // Function to populate the table
            function populateTable(data) {
                const tbody = $('#loanProductsTable tbody');
                tbody.empty();
                data.forEach(product => {
                    const row = `
                        <tr>
                            <td>${product.name}</td>
                            <td>${product.interestRate}</td>
                            <td>${product.minAmount}</td>
                            <td>${product.maxAmount}</td>
                            <td>${product.tenure}</td>
                            <td>
                                <button class="btn btn-sm btn-warning edit-button" data-product-name="${product.name}">Edit</button>
                                <button class="btn btn-sm btn-danger delete-button" data-product-name="${product.name}">Delete</button>
                            </td>
                        </tr>
                    `;
                    tbody.append(row);
                });
            }

            // Initial population of the table
            populateTable(loanProductsData);

            // Handle Edit button click
            $(document).on('click', '.edit-button', function () {
                const productName = $(this).data('product-name');
                currentlyEditingProduct = productName;
                const product = loanProductsData.find(p => p.name === productName);

                if (product) {
                    $('#editProductName').val(product.name);
                    $('#editInterestRate').val(product.interestRate);
                    $('#editMinAmount').val(product.minAmount);
                    $('#editMaxAmount').val(product.maxAmount);
                    $('#editTenure').val(product.tenure);
                    $('#editProductModal').modal('show');
                }
            });

            // Handle Save button click in the modal
            $('#saveEditButton').on('click', function () {
                if (currentlyEditingProduct) {
                    const interestRate = $('#editInterestRate').val();
                    const minAmount = $('#editMinAmount').val();
                    const maxAmount = $('#editMaxAmount').val();
                    const tenure = $('#editTenure').val();

                    const index = loanProductsData.findIndex(p => p.name === currentlyEditingProduct);
                    if (index !== -1) {
                        loanProductsData[index].interestRate = parseFloat(interestRate);
                        loanProductsData[index].minAmount = parseInt(minAmount);
                        loanProductsData[index].maxAmount = parseInt(maxAmount);
                        loanProductsData[index].tenure = parseInt(tenure);
                        populateTable(loanProductsData);
                        $('#editProductModal').modal('hide');
                        currentlyEditingProduct = null;
                        console.log('Updated Product:', currentlyEditingProduct, interestRate, minAmount, maxAmount, tenure);
                    }
                }
            });

            // Handle modal hide event for edit modal
            $('#editProductModal').on('hidden.bs.modal', function () {
                currentlyEditingProduct = null;
            });

            // Handle Delete button click
            $(document).on('click', '.delete-button', function () {
                productToDelete = $(this).data('product-name');
                $('#deleteProductName').text(productToDelete); // Set the product name in the confirmation modal
                $('#deleteConfirmationModal').modal('show'); // Show the confirmation modal
            });

            // Handle confirmation of delete
            $('#confirmDeleteButton').on('click', function () {
                if (productToDelete) {
                    const indexToDelete = loanProductsData.findIndex(p => p.name === productToDelete);

                    if (indexToDelete !== -1) {
                        loanProductsData.splice(indexToDelete, 1);
                        populateTable(loanProductsData);
                        console.log('Deleted Product:', productToDelete);
                    }
                    $('#deleteConfirmationModal').modal('hide'); // Hide the confirmation modal
                    productToDelete = null; // Reset the product to delete
                }
            });

            // Handle cancellation of delete (closing the modal)
            $('#deleteConfirmationModal').on('hidden.bs.modal', function () {
                productToDelete = null; // Reset the product to delete if the modal is closed
            });
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>